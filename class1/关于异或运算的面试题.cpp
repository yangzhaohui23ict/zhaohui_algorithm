////题干：
////    1.有一个数组，只有一个数出现了奇数次，其他所有数都出现了偶数次，如何找到这个数。
////    2.如果是有两个数出现了奇数次，如何找到这两个数。
//
//
////解题思路：
////    1.准备一个变量，一路异或到底，最最后这个变量就是这个只出现了奇数次数的数
////    2.还是准备一个变量，一路异或到底，最最后这个变量这两个奇数次出现数的异或结果。并且这两个数肯定不能一样，所以这个变量一定不为0.也就是说，这两个数，一定在一位上不一样
////      再准备一个变量，此时，我们叫这个变量继续去异或，但是只异或，上一个变量为1的位次上不为1的数，这样，这个变量就是其中的一个奇数次出现的数，两个变量再异或一下就是另一个。
//
//
////  另外，位运算是最最快的运算，比什么算数运算快多了。
//#include <iostream>
//#include <vector>
//using namespace std;
//int main()
//{
////    题目一
////    int b[9]={1,1,1,1,2,2,3,3,9};
////    vector<int> a(b,b+9);
////    int eor=0;
////    for(int i=0;i<9;i++){
////        eor=eor^a[i];
////    }
////    cout<<eor<<endl;
//
//
////  题目二
//    int b[8]={1,1,1,2,2,3,3,9};
//    vector<int> a(b,b+8);
//    int eor=0;
//    for(int i=0;i<8;i++){
//        eor=eor^a[i];
//    }
//    //  eor=a^b
//    //  提取出最右边的一位1
//    int rightone=eor&(~eor+1);
//    cout<<rightone<<endl;
//    int onlyone=0;
//    for(int i=0;i<8;i++){
//        if((a[i]&rightone)==0){
//            onlyone=onlyone^a[i];
//        }
//    }
//    cout<<onlyone<<"  "<<(eor^onlyone)<<endl;
//
//    return 0;
//}
